<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Consultant extends MX_Controller {

    function __construct() {
        parent::__construct();
        $last = end($this->uri->segments);
        if ($last != 'login') {
            is_logged_in();
        }
        $this->load->model('user_model');
        $this->load->model('expertise_model');
        $this->load->model('category_model');
        $this->load->model('ticket_model');
        // $this->load->library(array('my_form_validation'));
	    // $this->form_validation->run($this);
    }

    function validateAge($date) {
        if(!empty($date)){
            $seletedDate = date('Y-m-d', strtotime($date));
            $currentDate = date('Y-m-d');
            $difference = dateDifference($currentDate,$seletedDate,'%y');
            if($difference>=18){
                return true;
            }else{
                $this->form_validation->set_message('validateAge', 'Age Must be greater than 18 Years.');
                return false;
            }
        }
    }
    
    function userProflephoto() {
        if(!empty($_FILES) && !empty($_FILES['user_photo']['name'])){
            $filename = $_FILES['user_photo']['name'];
            $file_extension= _getExtension($filename);
            $allowed_size  = 109715; //5000000;//5mb-2Mb
            $allowed_extension = array('jpg', 'jpeg', 'JPG', 'JPEG', 'gif', 'GIF', 'png', 'PNG');
            if (!in_array($file_extension, $allowed_extension)) {
                $this->form_validation->set_message('userProflephoto', 'The filetype you are attempting to upload is not allowed.');
                return FALSE;
            }else if ($_FILES['user_photo']['size'] > $allowed_size) {
                $this->form_validation->set_message('userProflephoto', 'The file you are attempting to upload is larger than the permitted size.');
                return FALSE;
            }else{
                return TRUE;
            }
        }else{
            return TRUE;
        }
    }
    
    public function validateEmail($str,$paramTwo) {
        $response = $this->user_model->validateEmail($str, $paramTwo);
        if (empty($response)) {
            return TRUE;
        }else{
            $this->form_validation->set_message('validateEmail', 'Email ID already registered!');
            return FALSE;
        }
    }
    
    function _alpha_dash_space($str_in = '')
	{
		if($str_in != '') {   
			if (! preg_match("/^([a-z ])+$/i", $str_in))
			{
				$this->form_validation->set_message('_alpha_dash_space', 'The %s field may only contain alphabets and spaces.');
				return FALSE;
			}else{
				return TRUE;
			}
		} else {
			return TRUE;
		}
	}
    
    public function consultant_list() {
        $data['section_name'] = "Consultant Management";
        $data['page_title'] = $data['site_title'] = "All Consultant";
        $data['pageUrl'] = $pageUrl = base_url($this->session->userdata('user_type') . '/admin/consultant');
        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'
                . '<li class="breadcrumb-item"><a href="' . $pageUrl . '/consultant_list">' . $data['page_title'] . '</a></li>'
                . '</ol>';
        $data['response'] = $this->user_model->getUserList('3', '', '', '', 'users.id', 'desc');
        _manage_template('templates/header', 'templates/footer', 'consultant/list', $data, 'templates/left_adminMenu');
    }
    
    public function create() {
        $data['section_name'] = "Consultant Management";
        $data['page_title'] = $data['site_title'] = "Create Consultant";
        $data['pageUrl'] = $pageUrl = base_url($this->session->userdata('user_type') . '/admin/consultant/create');
        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'
            . '<li class="breadcrumb-item"><a href="' . base_url($this->session->userdata('user_type') . '/admin/consultant/consultant_list') . '">Consultant</a></li><li class="breadcrumb-item"><a href="' . $pageUrl . '">' . $data['page_title'] . '</a></li>'
            . '</ol>';
        $data['countryList'] = $this->user_model->getCountryList();
        if ($this->input->server('REQUEST_METHOD') === "POST") {
            $this->form_validation->set_rules('user_name', 'Consultant Name', 'trim|required|min_length[2]|callback__alpha_dash_space');
            $this->form_validation->set_rules('account_type', 'Account Type', 'trim|required');
            $this->form_validation->set_rules('user_email', 'Email address', 'trim|required|valid_email|is_unique[nw_user_tbl.email]');
            $this->form_validation->set_rules('password', 'Password', 'required|min_length[6]');
            $this->form_validation->set_message('is_unique', 'Email ID already registered!');
            $this->form_validation->set_rules('user_mobile', 'Mobile', 'trim|required|numeric|exact_lenght[10]');
            $this->form_validation->set_rules('user_dob', 'Date Of Birth', 'trim|callback_validateAge');
            $this->form_validation->set_rules('user_country', 'Country', 'trim');
            $this->form_validation->set_rules('user_state', 'State', 'trim');
            $this->form_validation->set_rules('user_city', 'City', 'trim|callback__alpha_dash_space');
            $this->form_validation->set_rules('user_address', 'Address', 'trim|max_lenght[50]');
            $this->form_validation->set_rules('pin_code', 'Pincode', 'trim|numeric|exact_length[6]');
            $this->form_validation->set_rules('user_gender', 'Gender', 'trim');
            $this->form_validation->set_rules('user_status', 'Status', 'trim');
            if ($this->form_validation->run()) {
                $responce = $this->user_model->createNewUsers('nw_user_tbl', [
                        'user_type'    => 3,
                        'email'        => $this->input->post('user_email'),
                        'password'     => md5($this->input->post('password')),
                        'status'       => $this->input->post('user_status'),
                        'created'      => date('Y-m-d H:i:s'),
                        'last_login'   => date('Y-m-d H:i:s'),
                        'login_status' => 0,
                        'activation_code'=> md5('test@123')
                    ]
                );
                if ($responce) {
                    $countrydata= $this->user_model->getCountryList($this->input->post('user_country'));
                    $countryName= ($countrydata !='') ? $countrydata->name:'';
                    $stateList  = $this->user_model->getStateList($this->input->post('user_state'));
                    $stateName  = ($stateList !='') ? $stateList->name:'';
                    $cityName   = $this->input->post('customer_city');
                    $getGeoData = _getGEOLocationByAddress($countryName.','.$stateName.','.$this->input->post('user_address').','.$cityName);
                    $dob        = date('Y-m-d',strtotime($this->input->post('user_dob')));
                    $this->user_model->createNewUsers('nw_consultant_tbl', [
                            'user_id'   => $responce,
                            'name'      => ucfirst($this->input->post('user_name')),
                            'dob'       => $dob,
                            'gender'    => $this->input->post('user_gender'),
                            'address'   => $this->input->post('user_address'),
                            'country_id'=> $this->input->post('user_country'),
                            'state_id'  => $this->input->post('user_state'),
                            'city_id'   => $this->input->post('user_city'),
                            'zip'       => $this->input->post('pin_code'),
                            'mobile'    => $this->input->post('user_mobile'),
                            'photo'     => '',
                            'latitude'  => ($getGeoData !='') ? $getGeoData['lat']:'',
                            'longitude' => ($getGeoData !='') ? $getGeoData['long']:'',
                            'status'    => 1,
                            'account_type'=> $this->input->post('account_type'),
                            'created'   => date('Y-m-d H:i:s')
                        ]
                    );
                    $wordpress_data = array(
                        'user_login' => $this->input->post('user_email'),
                        'user_email' => $this->input->post('user_email'),
                        'user_pass'  => md5($this->input->post('password')),
                        'user_registered' => date('Y-m-d H:i:s')
                    );
                    $this->user_model->create_wordpress_user($wordpress_data);
                    $this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Customer Step1 info has been created successfully.'));
                    redirect(base_url($this->session->userdata('user_type') . '/admin/consultant/create_info/' . $responce));
                }else {
                    $this->session->set_flashdata('responce_msg',array('class'=>DANGER_ALERT,'short_msg' =>'WORNING','message'=>'Something went wrong.'));
                }
            }
        }
        _manage_template('templates/header', 'templates/footer', 'consultant/create', $data, 'templates/left_adminMenu');
    }

    public function create_info() {
        $data['id'] = $id = $this->uri->segment(4);
        $data['section_name'] = "Consultant Management";
        $data['page_title'] = $data['site_title'] = "Create Consultant";
        $data['pageUrl'] = $pageUrl = base_url($this->session->userdata('user_type') . '/admin/consultant/create_info');
        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'
            . '<li class="breadcrumb-item"><a href="' . base_url($this->session->userdata('user_type') . '/admin/consultant/consultant_list') . '">Consultant</a></li><li class="breadcrumb-item"><a href="' . $pageUrl . '">' . $data['page_title'] . '</a></li>'
            . '</ol>';
        $data['expertise'] = $this->expertise_model->listExpertise();
        $data['category'] = $this->category_model->getParentCategory();
        if ($this->input->server('REQUEST_METHOD') === "POST") {
            $this->form_validation->set_rules('category_id', 'Category Name', 'trim|required');
            $this->form_validation->set_rules('subcategory_id', 'Subcategory Name', 'trim|required');
            $this->form_validation->set_rules('contact_number', 'Contact Number', 'trim|numeric|exact_length[10]');
            $this->form_validation->set_rules('aadhar_no', 'Aadhar Card Number', 'trim|numeric|exact_length[12]|is_unique[nw_consultant_tbl.aadhaar_card_number]');
            $this->form_validation->set_rules('pan_no', 'Pan Card Number', 'trim|alpha_numeric|exact_length[10]|is_unique[nw_consultant_tbl.pan_card_number]');
            $this->form_validation->set_rules('expertise_text', 'Expertise', 'trim');
            $this->form_validation->set_rules('user_address', 'Address', 'trim|max_lenght[30]');
            $this->form_validation->set_rules('education_text', 'Education', 'trim|max_lenght[30]');
            $this->form_validation->set_rules('experience', 'Experience', 'trim|max_lenght[50]');
            $this->form_validation->set_rules('user_photo', 'Profile Picture', 'callback_userProflephoto');
            $this->form_validation->set_rules('user_aadhar_photo', 'Profile Picture', 'callback_userProflephoto');
            $this->form_validation->set_rules('user_pan_photo', 'Profile Picture', 'callback_userProflephoto');
            if ($this->form_validation->run()) {
                if (!empty($this->input->post('expertise_text'))) {
                    $expertise = implode(',', $this->input->post('expertise_text'));
                } else {
                    $expertise = "";
                }
               /* if (empty($this->input->post('subcategory_id'))) {
                    $category = $this->input->post('category_id');
                } else {
                    $category = $this->input->post('subcategory_id');
                } */
                if(!empty($_FILES) && !empty($_FILES['user_photo']['name'])){
                    $filename = $_FILES['user_photo']['name'];
                    $tmp_path = $_FILES['user_photo']['tmp_name'];
                    $profilephoto = uploadImage($filename, $tmp_path, 'profile', '140');
                }else{
                    $profilephoto = '';
                }
                if(!empty($_FILES) && !empty($_FILES['aadhar_photo']['name'])){
                    $aadharname = $_FILES['aadhar_photo']['name'];
                    $tmp_path1  = $_FILES['aadhar_photo']['tmp_name'];
                    $aadharphoto= uploadImage($aadharname, $tmp_path1, 'consultant', '140');
                }else{
                    $aadharphoto= '';
                }
                if(!empty($_FILES) && !empty($_FILES['pan_photo']['name'])){
                    $panname = $_FILES['pan_photo']['name'];
                    $tmp_path2  = $_FILES['pan_photo']['tmp_name'];
                    $panphoto= uploadImage($panname, $tmp_path2, 'consultant', '140');
                }else{
                    $panphoto= '';
                }
                $this->user_model->updateConsultantById('user_id', $id, [
                    'category_id'       => $this->input->post('category_id'),
                    'subcategory_id'    => $this->input->post('subcategory_id'),
                    'telephone'         => $this->input->post('contact_number'),
                    'photo'             => $profilephoto,
                    'aadhaar_card_number'=> $this->input->post('aadhar_no'),
                    'aadhaar_photo'     => $aadharphoto,
                    'pan_card_number'   => $this->input->post('pan_no'),
                    'pan_photo'         => $panphoto,
                    'education'         => $this->input->post('education_text'),
                    'expertise'         => $expertise,
                    'experience'        => $this->input->post('experience'),
                    'modified'          => date('Y-m-d H:i:s')
                ]);
                $this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Consultant has been created successfully.'));
                redirect(base_url($this->session->userdata('user_type') . '/admin/consultant/consultant_list'));
            }
        }
        _manage_template('templates/header', 'templates/footer', 'consultant/create_info', $data, 'templates/left_adminMenu');
    }

    public function edit() {
        $id = $this->uri->segment(4);
        if(empty($id)){
            redirect(base_url($this->session->userdata('user_type') . '/admin/consultant/consultant_list'));
        }
        $data['section_name'] = "Consultant Management";
        $data['page_title'] = $data['site_title'] = "Edit Consultant";
        $data['pageUrl'] = $pageUrl = base_url($this->session->userdata('user_type') . '/admin/consultant/edit/'.$id);
        $data['edit_info'] = $edit_info = base_url($this->session->userdata('user_type') . '/admin/consultant/edit_info/'.$id);
        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'
                . '<li class="breadcrumb-item"><a href="' . base_url($this->session->userdata('user_type') . '/admin/consultant/consultant_list') . '">Consultant</a></li><li class="breadcrumb-item"><a href="' . $pageUrl . '">' . $data['page_title'] . '</a></li>'
                . '</ol>';
        $data['consultant']= $this->user_model->getConsultantById($id);
        $data['expertise'] = $this->expertise_model->listExpertise();
        $data['category']  = $this->category_model->getParentCategory();
        $data['countryList'] = $this->user_model->getCountryList();
        if ($this->input->server('REQUEST_METHOD') === "POST") {
            $this->form_validation->set_rules('user_name', 'Consultant Name', 'trim|required|min_length[2]|callback__alpha_dash_space');
            $this->form_validation->set_rules('user_email', 'Email address', 'trim|required|valid_email|callback_validateEmail['.$id.']');
            $this->form_validation->set_rules('password', 'Password', 'min_length[6]');
            $this->form_validation->set_rules('account_type', 'Account Type', 'trim|required');
            $this->form_validation->set_rules('user_mobile', 'Mobile', 'trim|required|numeric|exact_lenght[10]');
            $this->form_validation->set_rules('user_dob', 'Date Of Birth', 'trim|callback_validateAge');
            $this->form_validation->set_rules('user_country', 'Country', 'trim');
            $this->form_validation->set_rules('user_state', 'State', 'trim');
            $this->form_validation->set_rules('user_city', 'City', 'trim|callback__alpha_dash_space');
            $this->form_validation->set_rules('user_address', 'Address', 'trim|max_lenght[100]');
            $this->form_validation->set_rules('pin_code', 'Pincode', 'trim|numeric|exact_length[6]');
            $this->form_validation->set_rules('user_gender', 'Gender', 'trim');
            $this->form_validation->set_rules('user_status', 'Status', 'trim');
            if ($this->form_validation->run()) {
                $countrydata= $this->user_model->getCountryList($this->input->post('user_country'));
                $countryName= ($countrydata !='') ? $countrydata->name:'';
                $stateList  = $this->user_model->getStateList($this->input->post('user_state'));
                $stateName  = ($stateList !='') ? $stateList->name:'';
                $cityName   = $this->input->post('customer_city');
                $getGeoData = _getGEOLocationByAddress($countryName.','.$stateName.','.$this->input->post('user_address').','.$cityName);
                $dob        = date('Y-m-d',strtotime($this->input->post('user_dob')));
                $consultArry = [
                    'name'          => ucfirst($this->input->post('user_name')),
                    'account_type'  => $this->input->post('account_type'),
                    'mobile'        => $this->input->post('user_mobile'),
                    'dob'           => $dob,
                    'country_id'    => $this->input->post('user_country'),
                    'state_id'      => $this->input->post('user_state'),
                    'city_id'       => $this->input->post('user_city'),
                    'address'       => $this->input->post('user_address'),
                    'zip'           => $this->input->post('pin_code'),
                    'gender'        => $this->input->post('user_gender'),
                    'latitude'      => ($getGeoData !='') ? $getGeoData['lat']:'',
                    'longitude'     => ($getGeoData !='') ? $getGeoData['long']:'',
                    'modified'      => date('Y-m-d H:i:s')
                ];
                $this->user_model->updateConsultantById('user_id', $id, $consultArry);
                
                $user_data = array(
                    'user_id'   => $id,
                    'status'    => (int)$this->input->post('user_status'),
                    'email'     => $this->input->post('user_email'),
                    'modified'  => date('Y-m-d H:i:s')
                    );
                 if(!empty($this->input->post('password'))) {
                    $user_data['password'] = sha1($this->input->post('password'));
                }
                $responce = $this->user_model->updateUser($user_data);
                
                $wordpress_data = array(
                        'user_login' => $this->input->post('user_email'),
                        'user_email' => $this->input->post('user_email')
                    );
                 if(!empty($this->input->post('password'))) {
                    $wordpress_data['user_pass'] = md5($this->input->post('password'));
                    }
                    //$this->user_model->update_wordpress_user($wordpress_data, $this->input->post('user_email'));
                $this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Customer Step1 info has been created successfully.'));
                redirect(base_url($this->session->userdata('user_type') . '/admin/consultant/edit_info/'.$id));
            }
        }
        _manage_template('templates/header', 'templates/footer', 'consultant/edit', $data, 'templates/left_adminMenu');
    }
    
    public function edit_info() {
      
        $id = $this->uri->segment(4);
        if(empty($id)){
            redirect(base_url($this->session->userdata('user_type') . '/admin/consultant/consultant_list'));
        }
        $data['section_name']= "Consultant Management";
        $data['page_title']  = $data['site_title'] = "Edit Consultant";
        $data['pageUrl']     = $pageUrl = base_url($this->session->userdata('user_type') . '/admin/consultant/edit_info/'.$id);
        $data['edit']        = $edit = base_url($this->session->userdata('user_type') . '/admin/consultant/edit/'.$id);
        $data['breadcrumb']  = '<ol class="breadcrumb float-sm-right">'
            . '<li class="breadcrumb-item"><a href="' . base_url($this->session->userdata('user_type') . 'consultant/consultant_list') . '">Consultant</a></li><li class="breadcrumb-item"><a href="' . $pageUrl . '">' . $data['page_title'] . '</a></li>'
            . '</ol>';
        $data['consultant'] = $this->user_model->getConsultantById($id);
        $data['expertise']  = $this->expertise_model->listExpertise();
        $data['category']   = $this->category_model->getParentCategory();
        $data['countryList']= $this->user_model->getCountryList();
        if ($this->input->server('REQUEST_METHOD') === "POST") {
            $this->form_validation->set_rules('category_id', 'Category Name', 'trim|required');
            $this->form_validation->set_rules('subcategory_id', 'Subcategory Name', 'trim|required');
            $this->form_validation->set_rules('contact_number', 'Contact Number', 'trim|numeric|exact_length[10]');
           // $this->form_validation->set_rules('aadhar_no', 'Aadhar Card Number', 'trim|numeric|exact_length[12]|is_unique[nw_consultant_tbl.aadhaar_card_number]');
           // $this->form_validation->set_rules('pan_no', 'Pan Card Number', 'trim|alpha_numeric|exact_length[10]|is_unique[nw_consultant_tbl.pan_card_number]');
             $this->form_validation->set_rules('aadhar_no', 'Aadhar Card Number', 'trim|numeric|exact_length[12]');
            $this->form_validation->set_rules('pan_no', 'Pan Card Number', 'trim|alpha_numeric|exact_length[10]');
            //$this->form_validation->set_rules('expertise_text', 'Expertise', 'trim');
            $this->form_validation->set_rules('user_address', 'Address', 'trim|max_lenght[30]');
            $this->form_validation->set_rules('education_text', 'Education', 'trim|max_lenght[30]');
            $this->form_validation->set_rules('experience', 'Experience', 'trim|max_lenght[50]');
            $this->form_validation->set_rules('user_photo', 'Profile Picture', 'callback_userProflephoto');
            $this->form_validation->set_rules('user_aadhar_photo', 'Profile Picture', 'callback_userProflephoto');
            $this->form_validation->set_rules('user_pan_photo', 'Profile Picture', 'callback_userProflephoto');
            if ($this->form_validation->run()) {
                if (!empty($this->input->post('expertise_text'))) {
                    $expertise = implode(',', $this->input->post('expertise_text'));
                } else {
                    $expertise = "";
                }
               /* if (empty($this->input->post('subcategory_id'))) {
                    $category = $this->input->post('category_id');
                } else {
                    $category = $this->input->post('subcategory_id');
                } */
                if(!empty($_FILES) && !empty($_FILES['user_photo']['name'])){
                    $filename = $_FILES['user_photo']['name'];
                    $tmp_path = $_FILES['user_photo']['tmp_name'];
                    $profilephoto = uploadImage($filename, $tmp_path, 'profile', '140');
                }else{
                    $profilephoto = '';
                }
                if(!empty($_FILES) && !empty($_FILES['aadhar_photo']['name'])){
                    $aadharname = $_FILES['aadhar_photo']['name'];
                    $tmp_path1  = $_FILES['aadhar_photo']['tmp_name'];
                    $aadharphoto= uploadImage($aadharname, $tmp_path1, 'consultant', '140');
                }else{
                    $aadharphoto= '';
                }
                if(!empty($_FILES) && !empty($_FILES['pan_photo']['name'])){
                    $panname = $_FILES['pan_photo']['name'];
                    $tmp_path2  = $_FILES['pan_photo']['tmp_name'];
                    $panphoto= uploadImage($panname, $tmp_path2, 'consultant', '140');
                }else{
                    $panphoto= '';
                }
                $this->user_model->updateConsultantById('user_id', $id, [
                    'category_id'       => $this->input->post('category_id'),
                    'subcategory_id'    => $this->input->post('subcategory_id'),
                    'telephone'         => $this->input->post('contact_number'),
                    'photo'             => $profilephoto,
                    'aadhaar_card_number'=> $this->input->post('aadhar_no'),
                    'aadhaar_photo'     => $aadharphoto,
                    'pan_card_number'   => $this->input->post('pan_no'),
                    'pan_photo'         => $panphoto,
                    'education'         => $this->input->post('education_text'),
                    'expertise'         => $expertise,
                    'experience'        => $this->input->post('experience'),
                    'modified'          => date('Y-m-d H:i:s')
                ]);
                $this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Customer Step1 info has been created successfully.'));
                redirect(base_url($this->session->userdata('user_type') . '/admin/consultant/consultant_list'));
            }
        }
        _manage_template('templates/header', 'templates/footer', 'consultant/edit_info', $data, 'templates/left_adminMenu');
    }
//    public function edit() {
//        $id = $this->uri->segment(4);
//        if(empty($id)){
//            redirect(base_url($this->session->userdata('user_type') . '/consultant/consultant_list'));
//        }
//        $data['section_name'] = "Consultant Management";
//        $data['page_title'] = $data['site_title'] = "Edit Consultant";
//        $data['pageUrl'] = $pageUrl = base_url($this->session->userdata('user_type') . '/consultant/edit');
//        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'
//                . '<li class="breadcrumb-item"><a href="' . base_url($this->session->userdata('user_type') . 'consultant/consultant_list') . '">Consultant</a></li><li class="breadcrumb-item"><a href="' . $pageUrl . '">' . $data['page_title'] . '</a></li>'
//                . '</ol>';
//        $data['consultant']= $this->user_model->getConsultantById($id);
//        $data['expertise'] = $this->expertise_model->listExpertise();
//        $data['category']  = $this->category_model->getParentCategory();
//        $data['countryList'] = $this->user_model->getCountryList();
//        
//        $this->form_validation->set_rules('user_name', 'Consultant Name', 'trim|required|alpha|min_length[2]');
//        $this->form_validation->set_rules('account_type', 'Account Type', 'trim|required');
////        $this->form_validation->set_rules('user_email', 'Email address', 'trim|required|valid_email|is_unique[nw_user_tbl.email]');
//        $this->form_validation->set_rules('user_dob', 'Date Of Birth', 'trim|required');
//        $this->form_validation->set_rules('user_gender', 'Gender', 'trim|required');
//        $this->form_validation->set_rules('user_address', 'Address', 'trim|max_lenght[50]');
//        $this->form_validation->set_rules('user_country', 'Country', 'trim|required');
//        $this->form_validation->set_rules('user_state', 'State', 'trim|required');
//        $this->form_validation->set_rules('user_city', 'City', 'trim|required');
//        $this->form_validation->set_rules('pin_code', 'Pincode', 'trim|required|numeric|exact_length[6]');
//        $this->form_validation->set_rules('user_mobile', 'Mobile', 'trim|required|numeric|exact_lenght[10]');
//        $this->form_validation->set_rules('user_status', 'Status', 'trim|required');
//        $this->form_validation->set_rules('category_id', 'Category Name', 'trim|required');
//        $this->form_validation->set_rules('contact_number', 'Contact Number', 'trim|required|numeric|exact_length[10]');
//        $this->form_validation->set_rules('aadhar_no', 'Aadhar Card Number', 'trim|required|numeric|exact_length[12]|is_unique[nw_consultant_tbl.aadhaar_card_number]');
//        $this->form_validation->set_rules('pan_no', 'Pan Card Number', 'trim|required|alpha_numeric|exact_length[10]|is_unique[nw_consultant_tbl.pan_card_number]');
//        $this->form_validation->set_rules('expertise_text', 'Expertise', 'required');
//        $this->form_validation->set_rules('user_address', 'Address', 'trim|max_lenght[30]');
//        $this->form_validation->set_rules('education_text', 'Education', 'trim|max_lenght[30]');
//        $this->form_validation->set_rules('experience', 'Experience', 'trim|max_lenght[50]');
//        if ($this->form_validation->run()) {
//
//            $dob = $this->input->post('user_dob');
//            $dob = date('Y-m-d', strtotime($dob));
//
//            if (!empty($this->input->post('expertise_text'))) {
//                $expertise = implode(',', $this->input->post('expertise_text'));
//            } else {
//                $expertise = "";
//            }
//            $data = array(
//                'account_type' => $this->input->post('account_type'),
//                'name' => $this->input->post('user_name'),
//                'dob' => $dob,
//                'gender' => $this->input->post('user_gender'),
//                'address' => $this->input->post('user_address'),
//                'country_id' => $this->input->post('user_country'),
//                'state_id' => $this->input->post('user_state'),
//                'city_id' => $this->input->post('user_city') ? $this->input->post('user_city') : 0,
//                'zip' => $this->input->post('pin_code'),
//                'mobile' => $this->input->post('user_mobile'),
//                'category_id' => $this->input->post('category_id'),
//                'telephone' => $this->input->post('contact_number'),
//                'aadhaar_card_number' => $this->input->post('aadhar_no'),
//                'aadhaar_photo' => '',
//                'pan_card_number' => $this->input->post('pan_no'),
//                'pan_photo' => '',
//                'photo' => $this->input->post('user_photo'),
//                'expertise' => $expertise,
//                'address' => $this->input->post('user_address'),
//                'education' => $this->input->post('education_text'),
//                'experience' => $this->input->post('experience'),
//                'latitude' => '',
//                'longitude' => '',
//                'modified' => date('Y-m-d H:i:s'));
//
//            $response = $this->user_model->updateConsultantById('id', $id, $data);
//
//            if ($response) {
//                redirect(base_url($this->session->userdata('user_type') . '/consultant/consultant_list'));
//            } else {
//                _manage_template('templates/header', 'templates/footer', 'consultant/edit', $data, 'templates/left_adminMenu');
//            }
//        } else {
//            _manage_template('templates/header', 'templates/footer', 'consultant/edit', $data, 'templates/left_adminMenu');
//        }
//    }

    public function view() {
        $id = $this->uri->segment(4);
        if(empty($id)){
            redirect(base_url($this->session->userdata('user_type').'/admin/consultant/consultant_list'));
        };
        $data['section_name']= "Consultant Management";
        $data['page_title']  = $data['site_title'] = "Consultant Detail";
        $data['pageUrl']     = $pageUrl = base_url($this->session->userdata('user_type') . '/admin/consultant/view/'.$id);
        $data['breadcrumb']  = '<ol class="breadcrumb float-sm-right">'
            . '<li class="breadcrumb-item"><a href="' . base_url($this->session->userdata('user_type') . '/admin/consultant/consultant_list') . '">Consultant</a></li><li class="breadcrumb-item"><a href="' . $pageUrl . '">' . $data['page_title'] . '</a></li>'
            . '</ol>';
        $data['row'] = $consultant= $this->user_model->getConsultantById($id);
        $expertise = '';
        if(!empty($consultant)){
            $expertIds = explode(',',$consultant->expertise);
            foreach($expertIds as $key=>$value){
                $exName = $this->user_model->getExpertiseById($value);
                if(!empty($exName)){
                    $expertise .= $exName->name.', ';
                }
            }
        }
        $data['expertise'] = removeCommaFromLast($expertise, ', ');
        _manage_template('templates/header', 'templates/footer', 'consultant/view', $data, 'templates/left_adminMenu');
    }

    public function updateRecords() {
        $id = $this->input->post('uid');
        $status = $this->input->post('status');
        $action = $this->input->post('action');
        $table = $this->input->post('table');
        if ($action == 'delete') {
            $return = $this->user_model->deleteUsers($id, 'nw_consultant_tbl');
            $status = true;
            $message = 'Record has been Successfully deleted.';
            $style_color = 'green';
            $redirectURL = base_url($this->session->userdata('user_type') . '/customer/customer_list');
        } else {
            if ($status == '1') {
                $statuss = 0;
            } else {
                $statuss = 1;
            }
            $return = $this->user_model->updateUser(array('user_id' => (int) $id, "status" => $statuss));
            $status = true;
            $message = 'Status has been updated successfully.';
            $style_color = 'green';
            $redirectURL = base_url($this->session->userdata('user_type') . '/customer/customer_list');
        }

        $ajaxResponse = json_encode(array('status' => $status, "message" => $message, 'style_color' => $style_color, 'redirectURL' => $redirectURL));
        echo $ajaxResponse;
    }

}
