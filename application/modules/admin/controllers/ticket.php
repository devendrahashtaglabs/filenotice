<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Ticket extends CI_Controller {      public function __construct() {        parent::__construct();		$last = end($this->uri->segments);        if ($last != 'login') {            $loggedin = $this->session->userdata('admins');			if(empty($loggedin)){				$redirect_url = FRONTEND_URL . 'admin/login';				redirect($redirect_url);			}        }        $this->load->model('user_model');        $this->load->model('ticket_model');        $this->load->model('category_model');        $this->load->model('customer_model');        $this->load->library(array('form_validation'));		$this->form_validation->run($this);    }    public function ticket_list() {        $data['section_name'] 	= "Service Management";        $data['page_title'] 	= $data['site_title'] = "New Request List";        $data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/ticket');        $data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'                . '<li class="breadcrumb-item"><a href="' . $pageUrl . '/ticket_list">' . $data['page_title'] . '</a></li>'                . '</ol>';        $data['response'] 		= $this->ticket_model->getAllTicketList('1','','','','id');		_manage_template('templates/header', 'templates/footer', 'ticket/list', $data, 'templates/left_adminMenu');    }    public function create(){        $this->load->helper(array('form', 'url'));        $data['section_name']= "Service Management";        $data['page_title']  = $data['site_title'] = "Create Ticket";        $data['pageUrl']     = $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/ticket');        $data['breadcrumb']  = '<ol class="breadcrumb float-sm-right"><li class="breadcrumb-item">'                . '<a href="'.$pageUrl.'/ticket_list">Ticket</a></li>'                . '<li class="breadcrumb-item"><a href="'.$pageUrl.'/create">'.$data['page_title'].'</a></li></ol>';        $data['categories'] = $this->category_model->getParentCategory('1');        $data['customer'] 	= $this->user_model->getUserList('2', '', '', '', 'details.name', 'desc','1');		$data['countryList']= $this->user_model->getCountryList();        $data['stateList']	= $this->user_model->getStateList('','88');        if ($this->input->server('REQUEST_METHOD') === "POST") {            $this->form_validation->set_rules('customer_id', 'Customer', 'trim|required');            $this->form_validation->set_rules('category_id', 'Category Name', 'trim|required');            $this->form_validation->set_rules('ticket_status', 'ticket status', 'trim|required');            $this->form_validation->set_rules('payment_status', 'Payment status', 'trim|required');            //$this->form_validation->set_rules('start_date', 'Start Date', 'trim|required');           // $this->form_validation->set_rules('close_date', 'Cloase Date', 'trim|required|callback_validateDate');			$this->form_validation->set_rules('customer_country', 'Country', 'trim|required');			$this->form_validation->set_rules('customer_state', 'State', 'trim|required');			$this->form_validation->set_rules('customer_city', 'City', 'trim|required|max_length[100]|xss_clean|alpha_numeric_spaces');			$this->form_validation->set_rules('customer_address', 'Address', 'trim|required|max_length[200]');			$this->form_validation->set_rules('customer_pincode', 'Pincode', 'trim|required|max_length[6]');            $this->form_validation->set_rules('status', 'Status', 'trim|required');            if ($this->form_validation->run()) {                $this->form_validation->set_rules('userfile[]', 'Ticket File', 'callback_image_upload');                if ($this->form_validation->run()) {					//$filename = [];					/* if(!empty($this->upload_data['file']['file_name'])) {					   $filename[] = $this->upload_data['file']['file_name'];					} else { 						$filename[] = ''; 					} */					$allfile = [];					$userdocuments = $this->image_uploads();					if(!empty($userdocuments)){						foreach($userdocuments as $userdocument){							$allfile[] = $userdocument;						}					}					$casefilename = $this->input->post('casefilename');					$casefiledata =  [];					$filearray 	  =  [];					$filecounts	  = count($allfile);										for($i=0;$i<$filecounts;$i++){						$filearray[$i]['file'] 		= $allfile[$i];						$filearray[$i]['filename'] 	= $casefilename[$i];					} 					$casefiledata = json_encode($filearray);					//$filename = implode(',',$allfile);					$start_date = date('Y-m-d H:i:s');					//$close_date = date('Y-m-d', strtotime($this->input->post('close_date')));					if (empty($this->input->post('subcategory_id'))) {						$category = $this->input->post('category_id');					}else{						$category = $this->input->post('subcategory_id');					}					$responce = $this->ticket_model->createTicket(						[						   // 'ticket_id'     	=> strtoupper('TICKET-'.randomstring(5)),							'ticket_id'     	=> strtoupper('TICKET-'.date('Ymdh24is')),							'customer_id'   	=> $this->input->post('customer_id'),							'description'   	=> $this->input->post('description'),							'file'          	=> $casefiledata,							'start_date'    	=> $start_date,							//'close_date'  	  => $close_date,							'ticket_status' 	=> $this->input->post('ticket_status'),							'category_id'   	=> $category,							'payment_status'	=> $this->input->post('payment_status'),							'status'        	=> $this->input->post('status'),							'customer_country'  => $this->input->post('customer_country'),							'customer_state'  	=> $this->input->post('customer_state'),							'customer_city'  	=> $this->input->post('customer_city'),							'customer_pincode'  => $this->input->post('customer_pincode'),							'customer_address'  => $this->input->post('customer_address'),							'created'       	=> date('Y-m-d')						]					);					if($responce){						$this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Ticket has been created successfully.'));						redirect($pageUrl.'/ticket_list');					}                }            }        }        _manage_template('templates/header', 'templates/footer', 'ticket/create', $data, 'templates/left_adminMenu');    }        /* function image_upload(){		if($_FILES['userfile']['size'] != 0){			$upload_dir = './uploads/ticket/';			if (!is_dir($upload_dir)) {				 mkdir($upload_dir);			}				$config['upload_path']   = $upload_dir;			$config['allowed_types'] = "gif|jpg|png|jpeg|pdf|doc|docx|xls|xlsx";			$config['max_size']      = 2048;			$config['encrypt_name']  = TRUE;			$new_name 				 = time().$_FILES["userfile"]['name'];			$config['file_name']     = $new_name;			$config['overwrite']     = false;			$this->load->library('upload', $config);					$this->upload->initialize($config);			if (!$this->upload->do_upload('userfile')){				$this->form_validation->set_message('image_upload', $this->upload->display_errors());				return false;			}				else{				$this->upload_data['file'] =  $this->upload->data();				return true;			}			}else{			//$this->form_validation->set_message('image_upload', "No file selected");			return true;		}    } */	public function image_uploads(){		if($_FILES['userfile']['size'] != 0){			$upload_dir = './uploads/ticket/';			$config = array();			if (!is_dir($upload_dir)) {				 mkdir($upload_dir);			}			$config['upload_path']   = $upload_dir;			$config['allowed_types'] = 'gif|jpg|png|jpeg|pdf|doc|docx|xls|xlsx';			$config['max_size']      = '0';			$config['overwrite']     = FALSE;			$config['encrypt_name']  = TRUE;			$this->load->library('upload');			$files 		= $_FILES;			$filecount  = count($_FILES['userfile']['name']);			$file 		= [];			for($i=0; $i< $filecount; $i++)			{           				$_FILES['userfile']['name']= time().$files['userfile']['name'][$i];				$_FILES['userfile']['type']= $files['userfile']['type'][$i];				$_FILES['userfile']['tmp_name']= $files['userfile']['tmp_name'][$i];				$_FILES['userfile']['error']= $files['userfile']['error'][$i];				$_FILES['userfile']['size']= $files['userfile']['size'][$i];    				$this->upload->initialize($config);				$targetpath = $config['upload_path'].$_FILES['userfile']['name'];				if(move_uploaded_file($_FILES['userfile']['tmp_name'], $targetpath)){							//if (($this->upload->do_upload())){					$file[] 	=  $_FILES['userfile']['name'];						}else{					$this->form_validation->set_message('image_upload',$this->upload->display_errors());					return false;				}			}			return $file;					}else{			return true;		}		    }    public function getSubcategory() {        if ($this->input->is_ajax_request() == true) {            $status = false;            $style_color = 'red';            $redirectURL = "";            $data = "";            if(!empty($this->input->post('category_id'))){                $responce = $this->category_model->listSubCategoryById($this->input->post('category_id'));                if (!empty($responce)) {                    $status			= true;                    $data  			= $responce;                    $mesage			= 'Record Available.';                    $style_color 	= 'green';                } else {                    $mesage 		= 'No record available for seleted category.';                }            }else{                $mesage = 'Please select a category.';            }            $ajaxResponse=json_encode(array('data'=>$data,'status'=>$status,"massege"=>$mesage,'style_color'=>$style_color,'redirectURL'=>$redirectURL));            echo $ajaxResponse;        }    }        function validateDate($date) {        if(!empty($date)){            $startdate = strtotime($this->input->post('start_date'));            $closedate = strtotime($this->input->post('close_date'));            if($closedate > $startdate){                return true;            }else{                $this->form_validation->set_message('validateDate', 'Close date must be greater than start date.');                return false;            }        }    }        public function edit() {        $id = $this->uri->segment(4);        $data['section_name'] = "Service Management";        $data['page_title'] = $data['site_title'] = "Edit Ticket";        $data['pageUrl'] 	= $pageUrl = base_url($this->session->userdata('admins')['user_type']. '/ticket');        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'                . '<li class="breadcrumb-item"><a href="'.$pageUrl.'/ticket_list">Ticket</a></li>'                . '<li class="breadcrumb-item"><a href="'.$pageUrl.'/edit/'.$id.'">' . $data['page_title'] . '</a></li></ol>';        $data['categories'] = $this->category_model->getParentCategory('1');        $data['ticket'] 	= $ticket = $this->ticket_model->getTicketById($id);		$data['countryList']= $this->user_model->getCountryList();        $data['stateList']	= $this->user_model->getStateList('','88');		if(!empty($data['ticket'])){			//$ignore_status_code 	= array(20);			$data['ticket_status'] = $this->ticket_model->getticketstatuslist();			if ($this->input->server('REQUEST_METHOD') === "POST") {				$this->form_validation->set_rules('category_id', 'Category Name', 'trim|required');				$this->form_validation->set_rules('ticket_status', 'ticket status', 'trim|required');				$this->form_validation->set_rules('payment_status', 'Payment status', 'trim|required');				$this->form_validation->set_rules('start_date', 'Start Date', 'trim|required');				//$this->form_validation->set_rules('close_date', 'Cloase Date', 'trim|callback_validateDate');				$this->form_validation->set_rules('customer_country', 'Country', 'trim|required');				$this->form_validation->set_rules('customer_state', 'State', 'trim|required');				$this->form_validation->set_rules('customer_city', 'City', 'trim|required|max_length[100]|xss_clean|alpha_numeric_spaces');				$this->form_validation->set_rules('customer_address', 'Address', 'trim|required|max_length[200]');				$this->form_validation->set_rules('customer_pincode', 'Pincode', 'trim|required|max_length[6]');				$this->form_validation->set_rules('status', 'Status', 'trim|required');				if ($this->form_validation->run()) {					$this->form_validation->set_rules('userfile', 'Ticket File', 'callback_image_upload');					if ($this->form_validation->run()) {						/* if(!empty($this->upload_data['file']['file_name'])) {						   $filename = $this->upload_data['file']['file_name'];						} else { 							$filename = $data['ticket']->file; 						} */						$imagename 	= $_FILES['userfile']['name'][0];						$allfile	= [];						if(!empty($imagename)){							$userdocuments = $this->image_uploads();							if(!empty($userdocuments)){								foreach($userdocuments as $userdocument){									$allfile[] = $userdocument;								}							}							$casefilename = $this->input->post('casefilename');							$casefiledata =  [];							$filearray 	  =  [];							$filecounts	  = count($allfile);												for($i=0;$i<$filecounts;$i++){								$filearray[$i]['file'] 		= $allfile[$i];								$filearray[$i]['filename'] 	= $casefilename[$i];							}														$oldfilearray = json_decode($ticket->file);							$newfilearray = array_merge($oldfilearray,$filearray);							$filename 	  = json_encode($newfilearray);							//$filename = $ticket->file .','. implode(',',$allfile);						}else{							$filename 	 = $ticket->file;						}						if (empty($this->input->post('subcategory_id'))) {							$category = $this->input->post('category_id');						} else {							$category = $this->input->post('subcategory_id');						}										// if($this->input->post('close_date') == ''){					//     $close_date = NULL;                   					// }else{					//      $close_date = date('Y-m-d', strtotime($this->input->post('close_date')));					// }										if($this->input->post('start_date') == ''){						$start_date = NULL;                   					}else{						$start_date = date('Y-m-d', strtotime($this->input->post('start_date')));					}					if($this->input->post('ticket_status') == '90' || $this->input->post('ticket_status') == '91'){						$c_datenew = date('Y-m-d');					}else{						$c_datenew = NULL;					}										$data = array(						'description'   	=> $this->input->post('description'),						'file'          	=> $filename,						'start_date'    	=> $start_date,						'close_date'    	=> $c_datenew,						'ticket_status' 	=> $this->input->post('ticket_status'),						'category_id'   	=> $category,						'payment_status'	=> $this->input->post('payment_status'),						'customer_country'  => $this->input->post('customer_country'),                        'customer_state'  	=> $this->input->post('customer_state'),                        'customer_city'  	=> $this->input->post('customer_city'),                        'customer_pincode'  => $this->input->post('customer_pincode'),                        'customer_address'  => $this->input->post('customer_address'),						'status'        	=> $this->input->post('status')					);					$responce 	= $this->ticket_model->updateTicket($data, $id);					$new_status = $this->input->post('status');					$new_ticket_status = $this->input->post('ticket_status');					$responcenew = $this->ticket_model->updateTicketNew($new_status,$new_ticket_status, $id);					if ($responce) {						$this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Ticket has been updated successfully.'));						redirect($pageUrl.'/ticket_list');					}					}				}			}			_manage_template('templates/header', 'templates/footer', 'ticket/edit', $data, 'templates/left_adminMenu');		}else{			$this->session->set_flashdata('responce_msg',array('class'=>DANGER_ALERT,'short_msg' =>'ERROR','message'=>'No Data Found.'));			redirect('admin/ticket/ticket_list');		}    }        public function assign() {        $id = $this->uri->segment(4);        if(empty($id)){            redirect(base_url($this->session->userdata('admins')['user_type'] . '/ticket/servicelist/?status=20'));        }        $data['section_name'] 	= "Service Management";        $data['ticket'] 		= $ticketdata = $this->ticket_model->getTicketById($id);		if(!empty($ticketdata)){			$customer_city 			= $ticketdata->customer_city;			$customer_state 		= $ticketdata->customer_state;			$category_id 			= $ticketdata->category_id;			$subcategory_id 		= $ticketdata->subcategory_id;			//$data['consultant'] 	= $this->user_model->getUserListbycitystate('3','','','','details.name','ASC','1',$customer_city,$customer_state);			$data['consultant'] 	= $this->user_model->getUserListbycitystateCategory($category_id,$subcategory_id,$customer_city,$customer_state);			$data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/ticket');			if(!empty($data['ticket']) && $data['ticket']->assign_date!=""){				$data['page_title'] = $data['site_title'] = "Assign Ticket";				$data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'				. '<li class="breadcrumb-item"><a href="'.$pageUrl.'/servicelist/?status=20">Assign</a></li>'				. '<li class="breadcrumb-item"><a href="'.$pageUrl.'/assign/'.$id.'">'.$data['page_title'].'</a></li></ol>';			}else{				$data['page_title'] = $data['site_title'] = "Assign Ticket";				$data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'				. '<li class="breadcrumb-item"><a href="'.$pageUrl.'/ticket_list">Ticket</a></li>'				. '<li class="breadcrumb-item"><a href="'.$pageUrl.'/assign/'.$id.'">'.$data['page_title'].'</a></li></ol>';            			}						if ($this->input->server('REQUEST_METHOD') === "POST") {				$this->form_validation->set_rules('consultant_id', 'Consultant', 'trim|required');				//$this->form_validation->set_rules('assign_date', 'Assign Date', 'trim|required');				 if ($this->form_validation->run()) {					//$assign_date = date('Y-m-d', strtotime($this->input->post('assign_date')));					$assign_date = date('Y-m-d');					$data = array(						'ticket_id'    => $id,						'consultant_id'=> $this->input->post('consultant_id'),						'customer_id'  => $this->input->post('customer_id'),						'assign_date'  => $assign_date,						'ticket_status'=> '20',						'status'       => '1',						'created'      => date('Y-m-d H:i:s')					);					$response = $this->ticket_model->insertTicketMap($data);					if($response){						$data = array(							'ticket_status'=> '20',						);						$this->ticket_model->updateTicket($data,$id);					}        					/*=======Update Start Time=======*/					$this->ticket_model->UpdateTicketStartTime($id,$assign_date);				   					/*=======Update Start Time=======*/										if ($response) {						$consultant_id 		= $this->input->post('consultant_id');						$consultantDetail	= $this->user_model->getUserDetailsById($consultant_id,'3');												$name = '';						if(!empty($consultantDetail)){							$to 	= $consultantDetail->email;							$name 	= $consultantDetail->name;						}						$loginlink = FRONTEND_URL.'/login';						$subject="File Notice- Ticket Assigned";						$message='Hello '.$name.',<br><br>Welcome to Filenotice.com.<br><br> You have assigned a ticket.<br><br><br>Thanks';						$ticket_id 	 = $ticketdata->ticket_id;						$description = $ticketdata->description;						$msg = $this->getMailData($name,$ticket_id,$description,$loginlink);						$from = "Filenotice <coffee@filenotice.com>";						$header = "From: $from\r\n";						$header .= "Content-type: text/html; charset=utf-8";						$responsemail = mail($to,$subject,$msg,$header);						if(isset($responsemail)){							$this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Ticket has been assign successfully.'));							redirect($pageUrl.'/servicelist/?status=20');						}					}				} 			}			_manage_template('templates/header', 'templates/footer', 'ticket/assign', $data, 'templates/left_adminMenu');		}else{			$this->session->set_flashdata('responce_msg',array('class'=>DANGER_ALERT,'short_msg' =>'ERROR','message'=>'No Data Found.'));			redirect('admin/ticket/ticket_list');		}    }		public function getMailData($name,$ticketid,$description,$loginlink){		$html = '';		$html .= '<table width="100%" border="0" cellspacing="0" cellpadding="0">';		  $html .= '<tbody>';			$html .= '<tr>';			  $html .= '<td><table width="600" border="0" cellspacing="0" cellpadding="0" align="center" bgcolor="#f8f8f8" style="font-family:helvetica, sans-serif;" class="MainContainer">';				  $html .= '<tbody>';					$html .= '<tr>';					  $html .= '<td><table width="100%" border="0" cellspacing="0" cellpadding="0">';						  $html .= '<tbody>';							$html .= '<tr>';							  $html .= '<td><table width="100%" border="0" cellspacing="0" cellpadding="0">';								  $html .= '<tbody>									<tr>									  <td class="movableContentContainer"><div class="movableContent" style="border: 0px; padding-top: 0px; position: relative;">										  <table width="100%" border="0" cellspacing="0" cellpadding="0">											<tbody style="background-color:#222">											  <tr>												<td height="15"></td>											  </tr>											  <tr>												<td><table width="100%" border="0" cellspacing="0" cellpadding="0">													<tbody>													  <tr>														<td valign="top"><table width="100%" border="0" cellspacing="0" cellpadding="0">															<tbody>															  <tr>																<td valign="top" width="" style="padding-left:15px;text-align: center;"><a href="'.FRONTEND_URL.'"><img src="'.FRONTEND_URL.'uploads/settings/logo.png" width="auto" height="45"></a></td>															  </tr>															</tbody>														  </table></td>													  </tr>													</tbody>												  </table></td>											  </tr>											  <tr>												<td height="15"></td>											  </tr>											</tbody>										  </table>';										$html .= '</div>';										$html .= '<div class="movableContent" style="border: 0px; padding-top: 0px; position: relative;">										  <table width="100%" border="0" cellspacing="0" cellpadding="0"  style="padding:0 15px; border:1px solid #b6b6b6">											<tbody>											  <tr>												<td height="18"></td>											  </tr>											  <tr>												<td><table width="100%" border="0" cellspacing="0" cellpadding="0">													<tbody>													  <tr>														<td class="specbundle"><div class="contentEditableContainer contentTextEditable">															<div class="contentEditable" style="text-align: left;">';															  $html .= '<h2 style="font-size: 20px;font-family:helvetica, sans-serif;">Dear '.$name.',</h2>';															  $html .= '<p style="line-height:20px;font-family:helvetica, sans-serif;color:#000000;"> <span style="font-family:helvetica, sans-serif;color:#000000;">Welcome to Filenotice.com.</span><br />';																$html .= '<span style="font-family:helvetica, sans-serif;color:#000000;">A ticket is assigned to you.</span><br />																Ticket Id : '.$ticketid.'<br/>																Description : '.$description.'';																$html .= '<br />';																																$html .= '<span style="font-family:helvetica, sans-serif;color:#000000;"> Please login to handle the ticket : <a href="'.$loginlink.'">login link</a></span> <br/><br/>';																$html .= '<span style="font-family:helvetica, sans-serif;color:#000000;"> Hope you will have benefit from our services.</span><br/><span style="font-family:helvetica, sans-serif;color:#000000;"> For any help, please contact us at :<a href="mailto:coffee@hashtaglabs.biz" target="_blank"> coffee@hashtaglabs.biz</a></span> </p>';															  $html .= '<br>															</div>														  </div></td>													  <tr>														<td class="specbundle" style="font-family:helvetica, sans-serif;color:#000000;">Regards,</td>													  </tr>													  <tr>														<td class="specbundle" style="font-family:helvetica, sans-serif;color:#000000;">Administrator</td>													  </tr>													  <tr>														<td class="specbundle" style="font-family:helvetica, sans-serif;color:#000000;">Filenotice</td>													  </tr>													  <tr>														<td class="specbundle">&nbsp;</td>													  </tr>													</tbody>												  </table></td>											  </tr>											</tbody>										  </table>										</div>										<div class="movableContent" style="border: 0px; padding-top: 0px; position: relative;">										  <table style="background-color: #272727;" width="100%" cellspacing="0" cellpadding="0" border="0">											<tbody>											  <tr>												<td height="8"></td>											  </tr>											  <tr>												<td height="8"><div class="contentEditableContainer contentTextEditable">													<div class="contentEditable" style="text-align: center;color:#AAAAAA;">													  <p style="margin:2px 0; font-size:10px;"> &copy; '.date("Y").' Filenotice </p>													</div>												  </div></td>											  </tr>											  <tr>												<td height="8"></td>											  </tr>											</tbody>										  </table>										</div></td>									</tr>								  </tbody>								</table></td>							</tr>						  </tbody>						</table></td>					</tr>				  </tbody>				</table></td>			</tr>		  </tbody>		</table>';		return  $html;	}    public function assign_list() {                 $data['section_name'] = "Service Management";        $data['page_title'] = $data['site_title'] = "Under Process List";        $data['pageUrl'] = $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/ticket/assign_list');        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'                . '<li class="breadcrumb-item"><a href="' . $pageUrl . '">' . $data['page_title'] . '</a></li></ol>';		$ignore_status_code = array(90,91);        $data['response'] 	= $this->ticket_model->getAssignTicket($ignore_status_code);		_manage_template('templates/header', 'templates/footer', 'ticket/assign_list', $data, 'templates/left_adminMenu');    }        public function completed_list() {        $data['section_name'] = "Completed Service";        $data['page_title'] = $data['site_title'] = "Completed List";        $data['pageUrl'] = $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/ticket/completed_list');        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'                . '<li class="breadcrumb-item"><a href="' . $pageUrl . '">' . $data['page_title'] . '</a></li></ol>';		$completed_status = array(90,91);        $data['tickets'] = $this->ticket_model->getCompletedTicket($completed_status);		_manage_template('templates/header', 'templates/footer', 'ticket/completed_list', $data, 'templates/left_adminMenu');		/* if(!empty($data['tickets']['data'])){		}else{			$this->session->set_flashdata('responce_msg',array('class'=>DANGER_ALERT,'short_msg' =>'ERROR','message'=>'No Data Found.'));			redirect('admin/ticket/ticket_list');		} */    }    public function conversation() {        $data['section_name']= "Service Management";        $data['page_title']  = $data['site_title'] = "Conversation";        $data['pageUrl'] = $pageUrl = base_url($this->session->userdata('user_type') . '/admin/ticket');        $data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'                . '<li class="breadcrumb-item"><a href="' . $pageUrl . '/ticket_list">' . $data['page_title'] . '</a></li></ol>';        $data['response'] = $this->ticket_model->getTicketList();                /*==========Ticket Data============*/                $data['ticketid']    = $ticketid = $this->uri->segment(4);		$ticketChat = $this->ticket_model->getChatAgainstTicket($ticketid);		$data['usersdata'] = $this->ticket_model->getuserdatabyticketid($ticketid);				$html = '<div class="direct-chat-messages">';		//$userType = ($this->session->userdata('users')['user_type']=='consultant')?3:2; 				if(!empty($ticketChat)){						foreach ($ticketChat as $key => $value) {				$chatData = $this->ticket_model->getUsersChatAgainstTicket($value->id,$value->user_id);				$details  = $this->user_model->getUserDetailsById($value->user_id,$chatData->user_type);				//echo "<pre>";print_r($details);echo "</pre>";//die(" on file ". __FILE__ ." on line ". __LINE__ );												if(!empty($details->photo) && $details->photo != ''){					$ImageUser = base_url('uploads/profile/'.$details->photo);				}else{					$ImageUser = base_url('uploads/profile/no_image_available.jpeg');				}								$rightbox = ($chatData->user_type=='2') ? 'right':'left';                $floatname= ($chatData->user_type=='2') ? 'float-right':'float-left';                $floatdate= ($chatData->user_type=='2') ? 'float-left':'float-right';                $iconcolor= ($chatData->user_type=='2') ? 'ffffff':'000000';				$chatType = ($chatData->chat_type =='file') ? '<a href="'.base_url('uploads/conversation/'.$chatData->chat_massege).'" alt="'.$chatData->chat_massege.'" title="Click to view this file" target="_blank"><i class="fa fa-paperclip" style="font-size:24px;color:#'.$iconcolor.';" title="Attachment"></i>&nbsp;&nbsp;</a>': $chatData->chat_massege;								if($details->user_type == 4){					$profileName = 'Agent '.$details->name;				}else{					$profileName = $details->name;				}				$html .= '<div class="direct-chat-msg '.$rightbox.'"><div class="direct-chat-info clearfix">						<span class="direct-chat-name '.$floatname.'">'.$profileName.'</span>						<span class="direct-chat-timestamp '.$floatdate.'">'.date('d-m-Y, h:i A', strtotime($chatData->created_at)).'</span>					</div><img class="direct-chat-img" src="'.$ImageUser.'" alt="message user image"/>					<div class="direct-chat-text">'.$chatType.'</div></div>';			}		}else{			$html .= '<div class="direct-chat-msg right"><div class="direct-chat-info clearfix"><span class="direct-chat-name float-right"></span><span class="direct-chat-timestamp float-left"></span></div><div class="direct-chat-text">No Record Available.</div></div>';		}					$data['html'] = $html .='</div>';        /*==========Ticket Data============*/                _manage_template('templates/header', 'templates/footer', 'ticket/conversation', $data, 'templates/left_adminMenu');    }        public function updateRecords() {        $ticketid 	= $this->input->post('uid');        $status 	= $this->input->post('status');        $action 	= $this->input->post('action');        $table 		= $this->input->post('table');        if($action == 'delete'){            $return = $this->ticket_model->delete($ticketid);            $status = true;            $message = 'Record has been Successfully deleted.';            $style_color = 'green';            $redirectURL = base_url($this->session->userdata('user_type') . '/ticket/ticket_list');        }else{            //$return = $this->ticket_model->updateTicket(array("status"=>($status=='1')?'0':'1'),(int)$ticketid);            $return = $this->ticket_model->updateTicket(array("status"=>($status=='1')?'0':'1',"ticket_status"=>('90')),(int)$ticketid);			if(isset($return)){				$this->ticket_model->updateMapRecordsByTicketId($ticketid,array("status"=>($status=='1')?'0':'1') );			}            $status = true;            $message = 'Status has been updated successfully.';            $style_color = 'green';            $redirectURL = base_url($this->session->userdata('user_type') . 'ticket/servicelist/?status=10');        }        $ajaxResponse = json_encode(array('status' => $status, "message" => $message, 'style_color' => $style_color, 'redirectURL' => $redirectURL));        echo $ajaxResponse;    }        public function update_ratingStatus() {        $ticketid = $this->input->post('uid');        $status = $this->input->post('status');        $action = $this->input->post('action');        $table = $this->input->post('table');                    $return = $this->ticket_model->update_ratingStatus(array("status"=>($status=='1')?'0':'1'),(int)$ticketid);            $status = true;            $message = 'Status has been updated successfully.';            $style_color = 'green';            $redirectURL = base_url($this->session->userdata('user_type') . 'ticket/servicelist/?status=90');        $ajaxResponse = json_encode(array('status' => $status, "message" => $message, 'style_color' => $style_color, 'redirectURL' => $redirectURL));        echo $ajaxResponse;    }        public function updateMapRecords() {        $mapid = $this->input->post('uid');        $status= $this->input->post('status');        $action= $this->input->post('action');        $table = $this->input->post('table');        if($action=='delete'){            $return = $this->ticket_model->deleteMapData($mapid);            $status = true;            $message = 'Record has been Successfully deleted.';            $style_color = 'green';            $redirectURL = base_url($this->session->userdata('user_type') . '/ticket/servicelist/?status=20');        }elseif($action=='mark_completed'){            $return 		= $this->ticket_model->updateRecordsById($mapid,array("ticket_status"=>'90',"status"=>'1') );			$ticketdetail 	= ''; 			if(isset($return)){				$ticketdetail = $this->ticket_model->getticketidfrommaptable($mapid);			}			$ticket_id 	= isset($ticketdetail->ticket_id)?$ticketdetail->ticket_id:'';			$returns 	= $this->ticket_model->updateTicket(array("close_date" => date("Y-m-d H:i:s"),"status"=>'1',"ticket_status"=>('90')),(int)$ticket_id);			if($returns){				$returnagent = $this->ticket_model->updateTicketData(array("status"=>'1',"ticket_status"=>('90')),'nw_agent_ticket_map_tbl','ticket_id',(int)$ticket_id);				$status  = true;				$consultanthtml = '';				$customerhtml 	= '';				if($returnagent){						$userDataFromMapid 	= $this->ticket_model->getticketuserdatafrommaptable($mapid);						$consultantdata 	= $this->user_model->getDataBykey('nw_user_tbl','id',$userDataFromMapid->consultant_id,'email');						$consultantemail 	= $consultantdata->email;						$customeredata 		= $this->user_model->getDataBykey('nw_user_tbl','id',$userDataFromMapid->customer_id,'email');						$customeremail 		= $customeredata->email;						$subject			="File Notice- Completed Ticket";						$loginurl 			= FRONTEND_URL .'/login'; 												$consultanthtml .= '<h2 style="font-size: 20px;font-family:helvetica, sans-serif;">Dear '.$userDataFromMapid->consultantname.',</h2>';						$consultanthtml .= '<p style="line-height:20px;font-family:helvetica, sans-serif;color:#000000; margin-left:20px;"> <span style="font-family:helvetica, sans-serif;color:#000000;">Your ticket '. $userDataFromMapid->customId .' has been marked as completed .</span><br /><span>For now, please login with correct login detail and check.</span><br/>';												$consultanthtml .= '<br/>';						$consultanthtml .= '<span style="font-family:helvetica, sans-serif;color:#000000;">Click here to login : <a href="'.$loginurl.'" target="_blank">'.$loginurl.'</a></span><br /><br>';						$consultanthtml .= '<span style="font-family:helvetica, sans-serif;color:#000000;">Thanks for using Filenotice Portal.</span><br />';						$consultanthtml .= '<br>';						$consultanthtml .= '<span style="font-family:helvetica, sans-serif;color:#000000;">For any help, please contact us at: <a href="mailto:coffee@hashtaglabs.biz">coffee@hashtaglabs.biz</a></span><br />';						$consultanthtml .= '<span style="font-family:helvetica, sans-serif;color:#000000;">Hope you will have benefit from our services.</span><br />';												$msg 	= getMailTemplate($consultanthtml);						$from 	= "Filenotice <coffee@filenotice.com>";						$header = "From: $from\r\n";						$header .= "Content-type: text/html; charset=utf-8";						/* $responseconsultantmail = mail($consultantemail,$subject,$msg,$header);						if($responseconsultantmail){							$customerhtml .= '<h2 style="font-size: 20px;font-family:helvetica, sans-serif;">Dear '.$userDataFromMapid->customername.',</h2>';							$customerhtml .= '<p style="line-height:20px;font-family:helvetica, sans-serif;color:#000000; margin-left:20px;"> <span style="font-family:helvetica, sans-serif;color:#000000;">Your ticket '. $userDataFromMapid->customId .' has been marked as completed .</span><br /><span>For now, please login with correct login detail and check.</span><br/>';														$customerhtml .= '<br/>';							$customerhtml .= '<span style="font-family:helvetica, sans-serif;color:#000000;">Click here to login : <a href="'.$loginurl.'" target="_blank">'.$loginurl.'</a></span><br />';							$customerhtml .= '<span style="font-family:helvetica, sans-serif;color:#000000;">Thanks for using Filenotice Portal.</span><br />';							$customerhtml .= '<br>';							$customerhtml .= '<span style="font-family:helvetica, sans-serif;color:#000000;">For any help, please contact us at: <a href="mailto:coffee@hashtaglabs.biz">coffee@hashtaglabs.biz</a></span><br />';							$customerhtml .= '<span style="font-family:helvetica, sans-serif;color:#000000;">Hope you will have benefit from our services.</span><br />';														$msg 	= getMailTemplate($customerhtml);							$responsecustomermail = mail($customeremail,$subject,$msg,$header);						} */										}				$message 		= 'Ticket has been Successfully completed.';				$style_color 	= 'green';				$redirectURL 	= base_url('admin/ticket/servicelist/?status=20');			}        }else{            if($status=='1'){                $statuss = 0;            }else{                $statuss = 1;            }            $return = $this->ticket_model->updateRecordsById($mapid,array("status"=>($status=='1')?'0':'1') );			$ticketdetail = ''; 			if(isset($return)){				$ticketdetail = $this->ticket_model->getticketidfrommaptable($mapid);			}			$ticket_id = isset($ticketdetail->ticket_id)?$ticketdetail->ticket_id:'';			$returns = $this->ticket_model->updateTicket(array("status"=>($status=='1')?'0':'1',"ticket_status"=>('90')),(int)$ticket_id);            $status = true;            $message = 'Status has been updated successfully.';            $style_color = 'green';            $redirectURL = base_url($this->session->userdata('user_type') . 'ticket/assign_list');        }        $ajaxResponse = json_encode(array('status' => $status, "message" => $message, 'style_color' => $style_color, 'redirectURL' => $redirectURL));        echo $ajaxResponse;    }        public function view() {        $id = $this->uri->segment(4);		if(!empty($id)){			$data['section_name'] = "Service Management";			$data['page_title'] = $data['site_title'] = "Ticket Detail";			$data['pageUrl'] = $pageUrl = base_url($this->session->userdata('admins')['user_type']. '/ticket');			$data['breadcrumb'] = '<ol class="breadcrumb float-sm-right">'					. '<li class="breadcrumb-item"><a href="'.$pageUrl.'/ticket_list">Ticket</a></li>'					. '<li class="breadcrumb-item"><a href="'.$pageUrl.'/view/'.$id.'">' . $data['page_title'] . '</a></li></ol>';			$data['ticket'] = $this->ticket_model->getTicketById($id);			if(!empty($data['ticket'])){				_manage_template('templates/header', 'templates/footer', 'ticket/view', $data, 'templates/left_adminMenu');			}else{				$this->session->set_flashdata('responce_msg',array('class'=>DANGER_ALERT,'short_msg' =>'ERROR','message'=>'No Data Found.'));				/* $this->load->library('user_agent');				$refer = '';				if ($this->agent->is_referral())				{					$refer =  $this->agent->referrer();				}				echo "<pre>";print_r(current_url());echo "</pre>";die(" on file ". __FILE__ ." on line ". __LINE__ ); */				redirect('admin/ticket/servicelist/?status=10');			}		}else{			$this->session->set_flashdata('responce_msg',array('class'=>DANGER_ALERT,'short_msg' =>'ERROR','message'=>'This id has not enough data.'));			redirect('admin/ticket/completed_list');		}    }	public function getChatDataByAjax($ticketid=null){		$ticketid = $_POST['ticketid'];        $ticketChat = $this->ticket_model->getChatAgainstTicket($ticketid);        $html = '<div class="direct-chat-messages">';        //$userType = ($this->session->userdata('users')['user_type']=='consultant')?3:2;                if(!empty($ticketChat)){            array_multisort($ticketChat, SORT_ASC );            foreach ($ticketChat as $key => $value) {                $chatData = $this->ticket_model->getUsersChatAgainstTicket($value->id,$value->user_id);                $details  = $this->user_model->getUserDetailsById($value->user_id,$chatData->user_type);                                if($details->photo != ''){                    $ImageUser = base_url('uploads/profile/'.$details->photo);                }else{                    $ImageUser = base_url('uploads/profile/no_image_available.jpeg');                }                                                $rightbox = ($chatData->user_type=='2') ? 'right':'left';                $floatname= ($chatData->user_type=='2') ? 'float-right':'float-left';                $floatdate= ($chatData->user_type=='2') ? 'float-left':'float-right';                $iconcolor= ($chatData->user_type=='2') ? 'ffffff':'000000';                if($chatData->chat_type =='file') {                     $acceptedFormats = array('gif', 'png', 'jpg', 'jpeg');                     if(in_array(pathinfo($chatData->chat_massege, PATHINFO_EXTENSION), $acceptedFormats)) {                        $chatType = ($chatData->chat_type =='file') ? '<a href="'.base_url('uploads/conversation/'.$chatData->chat_massege).'" alt="'.$chatData->chat_massege.'" title="Click to view this file" target="_blank"><img src="'.base_url('uploads/conversation/'.$chatData->chat_massege).'" style="width:60px; height:50px;"/></a>': $chatData->chat_massege;                    } else {                        $chatType = ($chatData->chat_type =='file') ? '<a href="'.base_url('uploads/conversation/'.$chatData->chat_massege).'" alt="'.$chatData->chat_massege.'" title="Click to download this file" target="_blank"><i class="fa fa-paperclip" style="font-size:24px;color:#'.$iconcolor.';"></i>'.$chatData->chat_massege.'</a>': $chatData->chat_massege;                    }                } else {                    $chatType = $chatData->chat_massege;                }               // $chatType = ($chatData->chat_type =='file') ? '<a href="'.base_url('uploads/conversation/'.$chatData->chat_massege).'" alt="'.$chatData->chat_massege.'" title="Click to view this file" target="_blank"><i class="fa fa-paperclip" style="font-size:24px;color:#'.$iconcolor.';" title="Attachment"></i>&nbsp;&nbsp;<i class="fa fa-eye" style="font-size:24px;color:#'.$iconcolor.';"></i></a>': $chatData->chat_massege;			    if($details->user_type == 4){					$profileName = 'Agent '.$details->name;				}else{					$profileName = $details->name;				}                $html .= '<div class="direct-chat-msg '.$rightbox.'"><div class="direct-chat-info clearfix">                        <span class="direct-chat-name '.$floatname.'">'.$profileName.'</span>                        <span class="direct-chat-timestamp '.$floatdate.'">'.date('d-m-Y, h:i A', strtotime($chatData->created_at)).'</span>                    </div><img class="direct-chat-img" src="'.$ImageUser.'" alt="message user image"/>                    <div class="direct-chat-text">'.$chatType.'</div></div>';                                                           }        }else{            $html .= '<div class="direct-chat-msg right"><div class="direct-chat-info clearfix"><span class="direct-chat-name float-right"></span><span class="direct-chat-timestamp float-left"></span></div><div class="direct-chat-text">No Record Available.</div></div>';        }                $data['html'] = $html .='</div>';                echo $html;            }	public function deleteticketfile() {		$rowid 		= $this->input->post('rowid');		$ticketid 	= $this->input->post('ticketid');		$ticketdata	= $this->ticket_model->getTicketById($ticketid);		if(!empty($ticketdata)){			$ticketfile 		= $ticketdata->file;			$ticketfileArray 	= json_decode($ticketfile);			if($rowid == '0'){				array_splice($ticketfileArray,$rowid,'1');			}else{					array_splice($ticketfileArray,$rowid,$rowid);			}			$newjson = json_encode($ticketfileArray);			$return = $this->ticket_model->updateTicket(array("file" => $newjson), (int) $ticketid);			if($return){				$this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Uploaded document has been deleted successfully.'));			}			echo $return;		}	}		public function customer_request() {		$data['section_name'] 	= "Customer Request Management";        $data['page_title'] 	= $data['site_title'] = "Request List";        $data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/ticket');        $data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'                . '<li class="breadcrumb-item"><a href="' . $pageUrl . '/servicelist/?status=10">' . $data['page_title'] . '</a></li>'                . '</ol>';        $data['response'] 		= $this->ticket_model->getcustomerrequestdata('');		_manage_template('templates/header', 'templates/footer', 'ticket/customer_request', $data, 'templates/left_adminMenu');	}	public function addremark($ticketid) {		$data['section_name'] 	= "Customer Request Management";        $data['page_title'] 	= $data['site_title'] = "Add Remark";        $data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/ticket');        $data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'                . '<li class="breadcrumb-item"><a href="' . $pageUrl . '/servicelist/?status=10">' . $data['page_title'] . '</a></li>'                . '</ol>';        $response 				= $this->ticket_model->getcustomerrequestdata($ticketid);        $data['response'] 		= !empty($response)?$response[0]:'';		if ($this->input->server('REQUEST_METHOD') === "POST") {			$admin_remark  		= $this->input->post('admin_remark');			$updateDataArray 	= array(				'admin_remark' 		=> $admin_remark,				'modified_at' 		=> date('Y-m-d H:i:s')			);			$returndata 	= $this->ticket_model->updateTicketData($updateDataArray,'nw_customer_request_tbl','ticket_id',$ticketid);			if($returndata){				$this->session->set_flashdata('responce_msg',array('class'=>SUCCESS_ALERT,'short_msg' =>'SUCCESS','message'=>'Request updated successfully.'));				redirect($pageUrl.'/customer_request');			}		}		_manage_template('templates/header', 'templates/footer', 'ticket/addremark', $data, 'templates/left_adminMenu');	}	/* public function getcustomoptiondata() {		$selectedOption = $this->input->post('selectedOption');		$currentdate 	= date('Y-m-d');		$desireddate	= '';		switch($selectedOption){			case 'd_ago' :				$desireddate = date('Y-m-d', strtotime('-1 days', strtotime($currentdate)));			break;			case 'w_ago' :				$desireddate = date('Y-m-d', strtotime('-7 days', strtotime($currentdate)));			break;			case 'm_ago' :				$desireddate = date("Y-m-d", strtotime( date( "Y-m-d", strtotime( $currentdate ) ) . "-1 month" ) );			break;		}		$ignore_status_code = array(90,91);        $response 			= $this->ticket_model->getCustomAssignTicket($ignore_status_code);	} */	public function servicelist() {        $data['section_name'] 	= "Service Management";		$data['status']			= $status = $this->input->get('status');		if(!empty($status)){			if($status == '5'){				$data['page_title'] 	= $data['site_title'] = "New Request List";				$data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/servicelist');				$data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'				. '<li class="breadcrumb-item"><a href="' . $pageUrl . '/servicelist/?status=10">' . $data['page_title'] . '</a></li>' . '</ol>';				$ticket_status 		= array('5');				$data['response'] 	= $this->ticket_model->getTickets('','id','desc',$ticket_status,'');			}elseif($status == '10'){				$data['page_title'] 	= $data['site_title'] = "New Request List";				$data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/servicelist');				$data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'				. '<li class="breadcrumb-item"><a href="' . $pageUrl . '/servicelist/?status=10">' . $data['page_title'] . '</a></li>' . '</ol>';				$ticket_status 		= array('10');				$data['response'] 	= $this->ticket_model->getTickets('','id','desc',$ticket_status,'1');			}elseif($status == '20'){				$data['page_title'] 	= $data['site_title'] = "Under Process List";				$data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/servicelist');				$data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'				. '<li class="breadcrumb-item"><a href="' . $pageUrl . '/servicelist/?status=20">' . $data['page_title'] . '</a></li>' . '</ol>';				$ticket_status 		= array('20','21','22','30','92','93');				$data['response'] 	= $this->ticket_model->getTickets('','id','desc',$ticket_status,'1');			}elseif($status == '90'){				$data['page_title'] 	= $data['site_title'] = "Completed List";				$data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/servicelist');				$data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'				. '<li class="breadcrumb-item"><a href="' . $pageUrl . '/servicelist/?status=90">' . $data['page_title'] . '</a></li>' . '</ol>';				$ticket_status 			= array('90','91');				$data['response'] 		= $this->ticket_model->getTickets('','id','desc',$ticket_status,'1');							}else{				$data['page_title'] 	= $data['site_title'] = "Service Request List";				$data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/servicelist');				$data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'				. '<li class="breadcrumb-item"><a href="' . $pageUrl . '/servicelist">' . $data['page_title'] . '</a></li>' . '</ol>';				$data['response'] 	= $this->ticket_model->getTickets('','id','desc',$status,'1');			}		}else{			$data['page_title'] 	= $data['site_title'] = "Service Request List";			$data['pageUrl'] 		= $pageUrl = base_url($this->session->userdata('admins')['user_type'].'/servicelist');			$data['breadcrumb'] 	= '<ol class="breadcrumb float-sm-right">'			. '<li class="breadcrumb-item"><a href="' . $pageUrl . '/servicelist">' . $data['page_title'] . '</a></li>' . '</ol>';			$data['response'] 	= $this->ticket_model->getTickets('','id','desc','','1');		}		_manage_template('templates/header', 'templates/footer', 'ticket/ticket_list_page', $data, 'templates/left_adminMenu');    }	public function changeleadreadstatus(){		$ticketid 			= $this->input->post('ticketid');		$updateDataArray 	= array(			'leads_read_status' => '1',			'modified' 			=> date('Y-m-d H:i:s')		); 		if(!empty($ticketid)){			$returndata = $this->ticket_model->updateTicketData($updateDataArray,'nw_ticket_tbl','id',$ticketid);			echo $returndata;			exit(0);		}	}}